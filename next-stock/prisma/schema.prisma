generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String      @id @default(uuid())
  name      String
  phone     String?
  users User[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  @@map("organizations")
}

model Role {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  @@map("roles")
}

model User {
  id    String    @id @default(uuid())
  firstName String @map("first_name")
  lastName String @map("last_name")
  email String @unique
  password String
  organizationId String @map("organization_id")
  organization Organization @relation(fields: [organizationId], references: [id])
  roleId   String @map("role_id")
  role      Role     @relation(fields: [roleId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  sessions  Session[]
  @@map("users")
}

model Session {
  id        String @id
  userId    String @map("user_id")
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}



model Product {
  id              Int             @id @default(autoincrement())
  name            String
  description     String?
  organizations   Organization    @relation(fields: [organizationId], references: [id])
  organizationId  Int
  ProductStock    ProductStock[]  // 商品と在庫の中間テーブルを関連付ける
}

model Stock {
  id              Int             @id @default(autoincrement())
  quantity        Int
  organizations   Organization    @relation(fields: [organizationId], references: [id])
  organizationId  Int
  ProductStock    ProductStock[]  // 商品と在庫の中間テーブルを関連付ける
}

// 商品と在庫の多対多関係を表現する中間テーブル
model ProductStock {
  productId Int
  stockId   Int
  product   Product @relation(fields: [productId], references: [id])
  stock     Stock   @relation(fields: [stockId], references: [id])

  @@id([productId, stockId])
}